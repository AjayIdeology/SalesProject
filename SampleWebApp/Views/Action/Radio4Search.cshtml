@model ServiceLayer.BBCScheduleService.Concrete.ScheduleSearcherData

@{
    ViewBag.Title = "Radio4Search";
}

<h2>BBC Radio4 Schedule Search</h2>

<p>This is an example of a real asynchronous task that processes data and shows the results. The steps are:</p>
<ol>
    <li>The form data is sent to the task which works out what is needed</li>
    <li>It then loops calls a asycn method in the data layer for each day.</li>
    <li>This async method makes a web request for the Radio4 schedule of a given day.</li>
    <li>The task then applies any fitering to the the data and returns it.</li>
    <li>This data is then sent back to the ActionRunner as the final result.</li>
    <li>The local JavaScript function supplied to the ActionRunner is then called with that data.</li>
    <li>This function hides the form and shows the results as a table.</li>
</ol> 

<div id="action-panel" class="hidden overflow-hidden" title="Action Progress">
    <div id="progressbar"></div>
    <div id="message-container" class="overflow-auto">
        <table id="messages" class="table table-condensed">
            <tbody></tbody>
        </table>
    </div>
    <div class="action-lower-menu">
        <button id="action-button" class="btn btn-default">Invalid</button>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Search information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NumDaysAhead, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumDaysAhead, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumDaysAhead, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TitleWordSearch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TitleWordSearch, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TitleWordSearch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ActionRunner")

    <script type="text/javascript">

        $(document).ready(function () {
            ActionRunner.startActionFromForm({ header: 'Searching Radio4 Schedule'});
        });

    </script>
}
